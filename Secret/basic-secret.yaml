apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: default
  labels:
    app: webapp
    environment: development
type: Opaque # Default type for arbitrary user-defined data
data:
  # All values must be base64 encoded
  username: YWRtaW4= # 'admin' in base64
  password: cGFzc3dvcmQxMjM= # 'password123' in base64
  database_url: bXlzcWw6Ly9kYi5leGFtcGxlLmNvbTo1NDMyL2FwcA== # mysql://db.example.com:5432/app
  api_key: YWJjZGVmZ2hpams= # 'abcdefghijk' in base64

# Alternative: Use stringData for plain text (automatically encoded)
# stringData:
#   username: admin
#   password: password123
#   database_url: mysql://db.example.com:5432/app
#   api_key: abcdefghijk
---
# Docker registry secret for private image pulls
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  # Generated by: kubectl create secret docker-registry regcred --docker-server=... --dry-run=client -o yaml
  .dockerconfigjson: eyJhdXRocyI6eyJteXJlZ2lzdHJ5LmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==
---
# TLS secret for HTTPS/Ingress
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: default
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and private key
  tls.crt: LS0tLS1CRUdJTi... # Certificate content in base64
  tls.key: LS0tLS1CRUdJTi... # Private key content in base64
